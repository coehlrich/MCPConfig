# This is a basic workflow that is manually triggered

name: Update

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      old_version:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Old version'
        # Input has to be provided for the workflow to run
        required: true
      new_version:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'New version'
        # Input has to be provided for the workflow to run
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  update:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - id: get_versions
      run: |
        mkdir -p ~/.minecraft/versions/
        wget https://launchermeta.mojang.com/mc/game/version_manifest_v2.json -O ~/.minecraft/version_manifest_v2.json
    - uses: actions/github-script@v6
      env:
        OLD_VERSION: ${{ github.event.inputs.old_version }}
        NEW_VERSION: ${{ github.event.inputs.new_version }}
      with:
        script: |
          const os = require('os')
          const fs = require('fs')
          const versions = JSON.parse(fs.readFileSync(os.homedir() + '.minecraft/version_manifest_v2.json', 'utf8')).versions
          for (var i = 0; i < versions.length; i++) {
            var version = versions[i]
            if (version.id == process.env.OLD_VERSION || version.id == process.env.NEW_VERSION) {
                var file = '.minecraft/versions/' + version.id + '/' + version.id
                core.notice(os.homedir())
                io.mkdirP(os.homedir() + '.minecraft/versions/' + version.id + '/')
                exec.exec('wget ' + version.url + ' -O ~/'  + file + '.json')
                var versionJson = JSON.parse(fs.readFileSync(os.homedir() + file + '.json', 'utf8'))
                exec.exec('wget ' + versionJson.downloads.client.url + ' -O ~/' + file + '.jar')
            }
          }
    - name: Build with Gradle
      uses: gradle/gradle-build-action@0d13054264b0bb894ded474f08ebb30921341cee
      with:
        arguments: update -Pold_version=snapshot/1.19/${{ github.event.inputs.old_version }} -Pnew_version=snapshot/1.19/${{ github.event.inputs.new_version }}

